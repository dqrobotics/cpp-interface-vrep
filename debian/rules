#!/usr/bin/make -f

BUILDDIR = build_dir

# secondly called by launchpad
build:
ifeq ($(TRAVIS),)
	echo "Not travis, hopefully launchpad. Clonning submodules manually..."
	rm -rf cpp/{*,.*}
	rm -rf cpp
	git clone --single-branch --branch release https://git.launchpad.net/~dqrobotics-dev/dqrobotics/+git/cpp cpp
	rm -rf coppeliarobotics/{*,.*}
	rm -rf coppeliarobotics
	mkdir -p coppeliarobotics
	git clone --single-branch --branch vrep-v3.6.2 https://git.launchpad.net/~dqrobotics-dev/dqrobotics/+git/coppelia-include coppeliarobotics/include
	git clone --single-branch --branch vrep-v3.6.2 https://git.launchpad.net/~dqrobotics-dev/dqrobotics/+git/coppelia-remoteApi coppeliarobotics/remoteApi
else
	echo "Travis detected, skipping manual submodule load"
endif
	mkdir $(BUILDDIR);
	cd $(BUILDDIR); cmake -DCMAKE_CXX_FLAGS="-fdebug-prefix-map=$(shell pwd)/src/=/usr/src/ -fdebug-prefix-map=$(shell pwd)/include/=/usr/include/" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=../debian/tmp/usr ..
	make -C $(BUILDDIR) 

# thirdly called by launchpad
binary: binary-indep binary-arch

binary-indep:
	# nothing to be done

binary-arch:
	cd $(BUILDDIR); cmake -P cmake_install.cmake
	mkdir -p debian/tmp/DEBIAN
	dpkg-gencontrol -plibdqrobotics-interface-vrep
	dpkg --build debian/tmp ..

# firstly called by launchpad
clean:
	rm -f build
	rm -rf $(BUILDDIR)

.PHONY: binary binary-arch binary-indep clean
